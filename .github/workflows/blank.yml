# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
  description: |
    This command installs the onboardbase cli for use in the circleci job.
  steps:
    - run:
        command: >-
          #!/bin/bash


          set -e


          exitWithMessage(){
            echo "$1 environment variable is not set"
            exit 1
          }


          checkEmpty(){
            [[ -n "$ONBOARDBASE_TOKEN" ]] || exitWithMessage "ONBOARDBASE_TOKEN"
            [[ -n "$ONBOARDBASE_PROJECT" ]] || exitWithMessage "ONBOARDBASE_PROJECT"
            [[ -n "$ONBOARDBASE_ENVIRONMENT" ]] || exitWithMessage "ONBOARDBASE_ENVIRONMENT"
          }


          # Check if environment variables are set

          checkEmpty


          # Installs yq command line tool to generate and parse yml files

          wget
          https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64.tar.gz
          -O - |\
            tar xz && sudo mv yq_linux_amd64 /usr/bin/yq

          # Create an empty .onboardbase file

          echo -e "setup:\n  project:\n  environment:" > .onboardbase.yaml


          # Populate the file using yq tool with the value from the environment
          variables

          yq eval ".setup.project = $ONBOARDBASE_PROJECT" -i .onboardbase.yaml

          yq eval ".setup.environment = $ONBOARDBASE_ENVIRONMENT" -i
          .onboardbase.yaml


          # Installs onboardbase CLI through npm

          yarn global add @onboardbase/cli@latest


          #Show the version of onboardbase that is installed

          onboardbase --version

          # Set the auth token to the 

          onboardbase config:set --token "$ONBOARDBASE_TOKEN"

          #Run a build command that if it runs successfully, singnifies
          onboardbase is setup successfully, and could be used successfully with
          the provided credentials.

          onboardbase run "echo 'Onboardbase setup is complete'"
        name: Install Onboardbase
